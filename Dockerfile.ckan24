###############################################################
# Dockerfile generated by Bocker-v1.3. Do not edit this file. #
###############################################################

FROM debian:wheezy
MAINTAINER Anh K. Huynh <kyanh@theslinux.org>

ENV CKAN_CONFIG /etc/ckan/default
ENV CKAN_DATA /var/lib/ckan
ENV CKAN_HOME /usr/lib/ckan/default

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_apt_clean
#   - ed_apt_install
#   - ed_apt_purge
#   - ed_apt_remove
#   - ed_supervisor_generator
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_apt_clean () 
# | { 
# |     rm -fv /var/cache/apt/*.bin;
# |     rm -fv /var/cache/apt/archives/*.*;
# |     rm -fv /var/lib/apt/lists/*.*;
# |     apt-get autoclean
# | }
# | ed_apt_install () 
# | { 
# |     apt-get update;
# |     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $@
# | }
# | ed_apt_purge () 
# | { 
# |     apt-get purge -y --auto-remove $@;
# |     ed_apt_clean
# | }
# | ed_apt_remove () 
# | { 
# |     DEBIAN_FRONTEND=noninteractive apt-get remove -y $@
# | }
# | ed_supervisor_generator () 
# | { 
# |     local _name="${1:-}";
# |     [[ -n "${_name}" ]] || return 0;
# |     { 
# |         echo "#!/bin/bash";
# |         echo "/bocker.sh $_name"
# |     } > /etc/s.supervisor/$_name.sh
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfYXB0X2NsZWFuICgpIAp7IAogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0Ly\
ouYmluOwogICAgcm0gLWZ2IC92YXIvY2FjaGUvYXB0L2FyY2hpdmVzLyouKjsKICAgIHJtI\
C1mdiAvdmFyL2xpYi9hcHQvbGlzdHMvKi4qOwogICAgYXB0LWdldCBhdXRvY2xlYW4KfQpl\
ZF9hcHRfaW5zdGFsbCAoKSAKeyAKICAgIGFwdC1nZXQgdXBkYXRlOwogICAgREVCSUFOX0Z\
ST05URU5EPW5vbmludGVyYWN0aXZlIGFwdC1nZXQgaW5zdGFsbCAteSAtLW5vLWluc3RhbG\
wtcmVjb21tZW5kcyAkQAp9CmVkX2FwdF9wdXJnZSAoKSAKeyAKICAgIGFwdC1nZXQgcHVyZ\
2UgLXkgLS1hdXRvLXJlbW92ZSAkQDsKICAgIGVkX2FwdF9jbGVhbgp9CmVkX2FwdF9yZW1v\
dmUgKCkgCnsgCiAgICBERUJJQU5fRlJPTlRFTkQ9bm9uaW50ZXJhY3RpdmUgYXB0LWdldCB\
yZW1vdmUgLXkgJEAKfQplZF9zdXBlcnZpc29yX2dlbmVyYXRvciAoKSAKeyAKICAgIGxvY2\
FsIF9uYW1lPSIkezE6LX0iOwogICAgW1sgLW4gIiR7X25hbWV9IiBdXSB8fCByZXR1cm4gM\
DsKICAgIHsgCiAgICAgICAgZWNobyAiIyEvYmluL2Jhc2giOwogICAgICAgIGVjaG8gIi9i\
b2NrZXIuc2ggJF9uYW1lIgogICAgfSA+IC9ldGMvcy5zdXBlcnZpc29yLyRfbmFtZS5zaAp\
9CmVjaG8gJyMhL2Jpbi9iYXNoJyA+IC9ib2NrZXIuc2gKZWNobyAnIyBUaGlzIGZpbGUgaX\
MgZ2VuZXJhdGVkIGJ5IEJvY2tlci4nID4+IC9ib2NrZXIuc2gKZGVjbGFyZSAtZiA+PiAvY\
m9ja2VyLnNoCmVjaG8gJ2lmIFtbIC1uICIkQCIgXV07IHRoZW4gJEA7IGZpOyAnID4+IC9i\
b2NrZXIuc2gKY2htb2QgNzU1IC9ib2NrZXIuc2gK\
  | base64 -d | bash

# Bocker methods:
# - ed_supervisor_env
# - ed_supervisor_install_base
# - ed_supervisor_install_supervisor
# - ed_supervisor_install_init_script
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_supervisor_env () 
# | { 
# |     export SUPERVISOR_URL="https://github.com/icyfork/supervisor/archive/v3.1.3_fluentd.tar.gz?patch=2015-Oct-25";
# |     export SUPERVISOR_SHA1="d018f1c7da708fd7167cd59b331ab1a387ea1fac";
# |     export SUPERVISOR_VERSION="3.1.3"
# | }
# | ed_supervisor_install_base () 
# | { 
# |     ed_apt_install cron exim4-daemon-light logrotate curl ca-certificates;
# |     ed_apt_clean;
# |     rm -rf /etc/supervisor/;
# |     mkdir -pv /etc/s.supervisor/ /supervisor/;
# |     ln -s /usr/bin/supervisorctl /usr/bin/s;
# |     rm -rf /var/log/exim4/ /var/spool/exim4/
# | }
# | ed_supervisor_install_supervisor () 
# | { 
# |     local _packages="python-setuptools python-pip gcc libc6-dev make g++ python-dev";
# |     ed_apt_install supervisor $_packages;
# |     curl -Lso /usr/bin/syslog-stdout.py https://raw.githubusercontent.com/icyfork/syslog-stdout/master/syslog-stdout.py#b1fb623f9aaaef83411d3821dc014bbbc983e622;
# |     mkdir -pv /usr/src/pip/;
# |     cd /usr/src/pip/;
# |     curl -Lso - https://github.com/icyfork/supervisor-stdout/archive/master.tar.gz | tar -xzf - -C /usr/src/pip/ --strip-components=1;
# |     python2 setup.py install;
# |     cd /;
# |     rm -rf /usr/src/pip/;
# |     pip install fluent-logger;
# |     mkdir -p /tmp/src/;
# |     cd /tmp/src/;
# |     curl -sSL "$SUPERVISOR_URL" -o "supervisord.tar.gz";
# |     echo "$SUPERVISOR_SHA1 *supervisord.tar.gz" | sha1sum -c -;
# |     rm -rf /usr/lib/python*/dist-packages/supervisor/ /usr/share/pyshared/supervisor /usr/share/pyshared/supervisor-*;
# |     tar -xzf supervisord.tar.gz --strip-components=1;
# |     python2 setup.py install;
# |     mv /usr/local/bin/* /usr/bin/ -fv;
# |     cd /tmp/;
# |     rm -rf /tmp/src/;
# |     ed_apt_purge $_packages;
# |     test "$(supervisord --version)" = "$SUPERVISOR_VERSION"
# | }
# | ed_supervisor_install_init_script () 
# | { 
# |     { 
# |         echo "#!/bin/bash";
# |         echo "exec /bocker.sh ed_supervisor_daemonize"
# |     } > /supervisor.sh;
# |     chmod 755 /supervisor.sh
# | }
# | ed_supervisor_env
# | ed_supervisor_install_base
# | ed_supervisor_install_supervisor
# | ed_supervisor_install_init_script
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfc3VwZXJ2aXNvcl9lbnYgKCkgCnsgCiAgICBleHBvcnQgU1VQRVJWSVNPUl\
9VUkw9Imh0dHBzOi8vZ2l0aHViLmNvbS9pY3lmb3JrL3N1cGVydmlzb3IvYXJjaGl2ZS92M\
y4xLjNfZmx1ZW50ZC50YXIuZ3o/cGF0Y2g9MjAxNS1PY3QtMjUiOwogICAgZXhwb3J0IFNV\
UEVSVklTT1JfU0hBMT0iZDAxOGYxYzdkYTcwOGZkNzE2N2NkNTliMzMxYWIxYTM4N2VhMWZ\
hYyI7CiAgICBleHBvcnQgU1VQRVJWSVNPUl9WRVJTSU9OPSIzLjEuMyIKfQplZF9zdXBlcn\
Zpc29yX2luc3RhbGxfYmFzZSAoKSAKeyAKICAgIGVkX2FwdF9pbnN0YWxsIGNyb24gZXhpb\
TQtZGFlbW9uLWxpZ2h0IGxvZ3JvdGF0ZSBjdXJsIGNhLWNlcnRpZmljYXRlczsKICAgIGVk\
X2FwdF9jbGVhbjsKICAgIHJtIC1yZiAvZXRjL3N1cGVydmlzb3IvOwogICAgbWtkaXIgLXB\
2IC9ldGMvcy5zdXBlcnZpc29yLyAvc3VwZXJ2aXNvci87CiAgICBsbiAtcyAvdXNyL2Jpbi\
9zdXBlcnZpc29yY3RsIC91c3IvYmluL3M7CiAgICBybSAtcmYgL3Zhci9sb2cvZXhpbTQvI\
C92YXIvc3Bvb2wvZXhpbTQvCn0KZWRfc3VwZXJ2aXNvcl9pbnN0YWxsX3N1cGVydmlzb3Ig\
KCkgCnsgCiAgICBsb2NhbCBfcGFja2FnZXM9InB5dGhvbi1zZXR1cHRvb2xzIHB5dGhvbi1\
waXAgZ2NjIGxpYmM2LWRldiBtYWtlIGcrKyBweXRob24tZGV2IjsKICAgIGVkX2FwdF9pbn\
N0YWxsIHN1cGVydmlzb3IgJF9wYWNrYWdlczsKICAgIGN1cmwgLUxzbyAvdXNyL2Jpbi9ze\
XNsb2ctc3Rkb3V0LnB5IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9pY3lm\
b3JrL3N5c2xvZy1zdGRvdXQvbWFzdGVyL3N5c2xvZy1zdGRvdXQucHkjYjFmYjYyM2Y5YWF\
hZWY4MzQxMWQzODIxZGMwMTRiYmJjOTgzZTYyMjsKICAgIG1rZGlyIC1wdiAvdXNyL3NyYy\
9waXAvOwogICAgY2QgL3Vzci9zcmMvcGlwLzsKICAgIGN1cmwgLUxzbyAtIGh0dHBzOi8vZ\
2l0aHViLmNvbS9pY3lmb3JrL3N1cGVydmlzb3Itc3Rkb3V0L2FyY2hpdmUvbWFzdGVyLnRh\
ci5neiB8IHRhciAteHpmIC0gLUMgL3Vzci9zcmMvcGlwLyAtLXN0cmlwLWNvbXBvbmVudHM\
9MTsKICAgIHB5dGhvbjIgc2V0dXAucHkgaW5zdGFsbDsKICAgIGNkIC87CiAgICBybSAtcm\
YgL3Vzci9zcmMvcGlwLzsKICAgIHBpcCBpbnN0YWxsIGZsdWVudC1sb2dnZXI7CiAgICBta\
2RpciAtcCAvdG1wL3NyYy87CiAgICBjZCAvdG1wL3NyYy87CiAgICBjdXJsIC1zU0wgIiRT\
VVBFUlZJU09SX1VSTCIgLW8gInN1cGVydmlzb3JkLnRhci5neiI7CiAgICBlY2hvICIkU1V\
QRVJWSVNPUl9TSEExICpzdXBlcnZpc29yZC50YXIuZ3oiIHwgc2hhMXN1bSAtYyAtOwogIC\
Agcm0gLXJmIC91c3IvbGliL3B5dGhvbiovZGlzdC1wYWNrYWdlcy9zdXBlcnZpc29yLyAvd\
XNyL3NoYXJlL3B5c2hhcmVkL3N1cGVydmlzb3IgL3Vzci9zaGFyZS9weXNoYXJlZC9zdXBl\
cnZpc29yLSo7CiAgICB0YXIgLXh6ZiBzdXBlcnZpc29yZC50YXIuZ3ogLS1zdHJpcC1jb21\
wb25lbnRzPTE7CiAgICBweXRob24yIHNldHVwLnB5IGluc3RhbGw7CiAgICBtdiAvdXNyL2\
xvY2FsL2Jpbi8qIC91c3IvYmluLyAtZnY7CiAgICBjZCAvdG1wLzsKICAgIHJtIC1yZiAvd\
G1wL3NyYy87CiAgICBlZF9hcHRfcHVyZ2UgJF9wYWNrYWdlczsKICAgIHRlc3QgIiQoc3Vw\
ZXJ2aXNvcmQgLS12ZXJzaW9uKSIgPSAiJFNVUEVSVklTT1JfVkVSU0lPTiIKfQplZF9zdXB\
lcnZpc29yX2luc3RhbGxfaW5pdF9zY3JpcHQgKCkgCnsgCiAgICB7IAogICAgICAgIGVjaG\
8gIiMhL2Jpbi9iYXNoIjsKICAgICAgICBlY2hvICJleGVjIC9ib2NrZXIuc2ggZWRfc3VwZ\
XJ2aXNvcl9kYWVtb25pemUiCiAgICB9ID4gL3N1cGVydmlzb3Iuc2g7CiAgICBjaG1vZCA3\
NTUgL3N1cGVydmlzb3Iuc2gKfQplZF9zdXBlcnZpc29yX2VudgplZF9zdXBlcnZpc29yX2l\
uc3RhbGxfYmFzZQplZF9zdXBlcnZpc29yX2luc3RhbGxfc3VwZXJ2aXNvcgplZF9zdXBlcn\
Zpc29yX2luc3RhbGxfaW5pdF9zY3JpcHQK\
  | base64 -d | bash

# Bocker methods:
# - ed_nginx_env
# - ed_nginx_install_packages
# - ed_nginx_download_source
# - ed_nginx_build
# - ed_nginx_clean_up
# - ed_nginx_create_generator
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_nginx_env () 
# | { 
# |     export NGINX_VERSION=1.8.0;
# |     export NGINX_CHECKSUM=12bad312764feae50246685ab2e74512d1aa9b2f
# | }
# | ed_nginx_install_packages () 
# | { 
# |     ed_apt_install gcc libc6-dev make libpcre3-dev git nginx libssl-dev
# | }
# | ed_nginx_download_source () 
# | { 
# |     mkdir -pv /usr/src/build/modules/;
# |     cd /usr/src/build/;
# |     curl -Lso- https://github.com/openresty/echo-nginx-module/archive/v0.57.tar.gz | tar -xzf - -C /usr/src/build/modules/;
# |     curl -Lso- https://github.com/openresty/headers-more-nginx-module/archive/v0.25.tar.gz | tar -xzf - -C /usr/src/build/modules/;
# |     curl -Lso /usr/src/build/nginx.tar.gz http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz;
# |     echo "$NGINX_CHECKSUM *nginx.tar.gz" | sha1sum -c -;
# |     tar -xzf nginx.tar.gz -C /usr/src/build/
# | }
# | ed_nginx_build () 
# | { 
# |     _NGINX_NAME="nginx-${NGINX_VERSION}";
# |     _NGINX_FLAGS="
# |       --prefix=/usr/       --conf-path=/etc/nginx/nginx.conf
# |       --http-log-path=/var/log/nginx/access.log
# |       --error-log-path=/var/log/nginx/error.log
# |       --lock-path=/var/lock/nginx.lock
# |       --pid-path=/run/nginx.pid
# |       --http-client-body-temp-path=/var/lib/nginx/body
# |       --http-fastcgi-temp-path=/var/lib/nginx/fastcgi
# |       --http-proxy-temp-path=/var/lib/nginx/proxy
# |       --http-scgi-temp-path=/var/lib/nginx/scgi
# |       --http-uwsgi-temp-path=/var/lib/nginx/uwsgi
# |       --with-pcre
# |       --with-http_ssl_module
# |       --with-http_stub_status_module
# |       --with-http_realip_module
# |       --with-http_gzip_static_module
# |       --with-http_sub_module
# |     ";
# |     _NONSTANDARD_MODULES="";
# |     _D_BUILD="/usr/src/build/";
# |     _NONSTANDARD_MODULES="$(     find $_D_BUILD/modules/           -mindepth 1 -maxdepth 1 -type d       | while read _d; do           echo -en " --add-module=$_d";         done)";
# |     cd $_D_BUILD/$_NGINX_NAME;
# |     sed -i -e 's# bgcolor=\\"white\\"##g' -e 's#<center><h1>##g' -e 's#</h1></center>##g' -e '/NGINX_VER/d' -e '/>nginx</d' ./src/http/ngx_http_special_response.c;
# |     sh configure $_NGINX_FLAGS $_NONSTANDARD_MODULES;
# |     make;
# |     make install
# | }
# | ed_nginx_clean_up () 
# | { 
# |     cd /;
# |     rm -rf /etc/nginx/ /usr/src/build/;
# |     ed_apt_purge gcc libc6-dev make libpcre3-dev git libssl-dev
# | }
# | ed_nginx_create_generator () 
# | { 
# |     { 
# |         echo "#!/bin/bash";
# |         echo "/bocker.sh ed_nginx_generate_config"
# |     } > /etc/s.supervisor/nginx.sh
# | }
# | ed_nginx_env
# | ed_nginx_install_packages
# | ed_nginx_download_source
# | ed_nginx_build
# | ed_nginx_clean_up
# | ed_nginx_create_generator
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfbmdpbnhfZW52ICgpIAp7IAogICAgZXhwb3J0IE5HSU5YX1ZFUlNJT049MS\
44LjA7CiAgICBleHBvcnQgTkdJTlhfQ0hFQ0tTVU09MTJiYWQzMTI3NjRmZWFlNTAyNDY2O\
DVhYjJlNzQ1MTJkMWFhOWIyZgp9CmVkX25naW54X2luc3RhbGxfcGFja2FnZXMgKCkgCnsg\
CiAgICBlZF9hcHRfaW5zdGFsbCBnY2MgbGliYzYtZGV2IG1ha2UgbGlicGNyZTMtZGV2IGd\
pdCBuZ2lueCBsaWJzc2wtZGV2Cn0KZWRfbmdpbnhfZG93bmxvYWRfc291cmNlICgpIAp7IA\
ogICAgbWtkaXIgLXB2IC91c3Ivc3JjL2J1aWxkL21vZHVsZXMvOwogICAgY2QgL3Vzci9zc\
mMvYnVpbGQvOwogICAgY3VybCAtTHNvLSBodHRwczovL2dpdGh1Yi5jb20vb3BlbnJlc3R5\
L2VjaG8tbmdpbngtbW9kdWxlL2FyY2hpdmUvdjAuNTcudGFyLmd6IHwgdGFyIC14emYgLSA\
tQyAvdXNyL3NyYy9idWlsZC9tb2R1bGVzLzsKICAgIGN1cmwgLUxzby0gaHR0cHM6Ly9naX\
RodWIuY29tL29wZW5yZXN0eS9oZWFkZXJzLW1vcmUtbmdpbngtbW9kdWxlL2FyY2hpdmUvd\
jAuMjUudGFyLmd6IHwgdGFyIC14emYgLSAtQyAvdXNyL3NyYy9idWlsZC9tb2R1bGVzLzsK\
ICAgIGN1cmwgLUxzbyAvdXNyL3NyYy9idWlsZC9uZ2lueC50YXIuZ3ogaHR0cDovL25naW5\
4Lm9yZy9kb3dubG9hZC9uZ2lueC0ke05HSU5YX1ZFUlNJT059LnRhci5nejsKICAgIGVjaG\
8gIiROR0lOWF9DSEVDS1NVTSAqbmdpbngudGFyLmd6IiB8IHNoYTFzdW0gLWMgLTsKICAgI\
HRhciAteHpmIG5naW54LnRhci5neiAtQyAvdXNyL3NyYy9idWlsZC8KfQplZF9uZ2lueF9i\
dWlsZCAoKSAKeyAKICAgIF9OR0lOWF9OQU1FPSJuZ2lueC0ke05HSU5YX1ZFUlNJT059Ijs\
KICAgIF9OR0lOWF9GTEFHUz0iCiAgICAgIC0tcHJlZml4PS91c3IvICAgICAgIC0tY29uZi\
1wYXRoPS9ldGMvbmdpbngvbmdpbnguY29uZgogICAgICAtLWh0dHAtbG9nLXBhdGg9L3Zhc\
i9sb2cvbmdpbngvYWNjZXNzLmxvZwogICAgICAtLWVycm9yLWxvZy1wYXRoPS92YXIvbG9n\
L25naW54L2Vycm9yLmxvZwogICAgICAtLWxvY2stcGF0aD0vdmFyL2xvY2svbmdpbngubG9\
jawogICAgICAtLXBpZC1wYXRoPS9ydW4vbmdpbngucGlkCiAgICAgIC0taHR0cC1jbGllbn\
QtYm9keS10ZW1wLXBhdGg9L3Zhci9saWIvbmdpbngvYm9keQogICAgICAtLWh0dHAtZmFzd\
GNnaS10ZW1wLXBhdGg9L3Zhci9saWIvbmdpbngvZmFzdGNnaQogICAgICAtLWh0dHAtcHJv\
eHktdGVtcC1wYXRoPS92YXIvbGliL25naW54L3Byb3h5CiAgICAgIC0taHR0cC1zY2dpLXR\
lbXAtcGF0aD0vdmFyL2xpYi9uZ2lueC9zY2dpCiAgICAgIC0taHR0cC11d3NnaS10ZW1wLX\
BhdGg9L3Zhci9saWIvbmdpbngvdXdzZ2kKICAgICAgLS13aXRoLXBjcmUKICAgICAgLS13a\
XRoLWh0dHBfc3NsX21vZHVsZQogICAgICAtLXdpdGgtaHR0cF9zdHViX3N0YXR1c19tb2R1\
bGUKICAgICAgLS13aXRoLWh0dHBfcmVhbGlwX21vZHVsZQogICAgICAtLXdpdGgtaHR0cF9\
nemlwX3N0YXRpY19tb2R1bGUKICAgICAgLS13aXRoLWh0dHBfc3ViX21vZHVsZQogICAgIj\
sKICAgIF9OT05TVEFOREFSRF9NT0RVTEVTPSIiOwogICAgX0RfQlVJTEQ9Ii91c3Ivc3JjL\
2J1aWxkLyI7CiAgICBfTk9OU1RBTkRBUkRfTU9EVUxFUz0iJCggICAgIGZpbmQgJF9EX0JV\
SUxEL21vZHVsZXMvICAgICAgICAgICAtbWluZGVwdGggMSAtbWF4ZGVwdGggMSAtdHlwZSB\
kICAgICAgIHwgd2hpbGUgcmVhZCBfZDsgZG8gICAgICAgICAgIGVjaG8gLWVuICIgLS1hZG\
QtbW9kdWxlPSRfZCI7ICAgICAgICAgZG9uZSkiOwogICAgY2QgJF9EX0JVSUxELyRfTkdJT\
lhfTkFNRTsKICAgIHNlZCAtaSAtZSAncyMgYmdjb2xvcj1cXCJ3aGl0ZVxcIiMjZycgLWUg\
J3MjPGNlbnRlcj48aDE+IyNnJyAtZSAncyM8L2gxPjwvY2VudGVyPiMjZycgLWUgJy9OR0l\
OWF9WRVIvZCcgLWUgJy8+bmdpbng8L2QnIC4vc3JjL2h0dHAvbmd4X2h0dHBfc3BlY2lhbF\
9yZXNwb25zZS5jOwogICAgc2ggY29uZmlndXJlICRfTkdJTlhfRkxBR1MgJF9OT05TVEFOR\
EFSRF9NT0RVTEVTOwogICAgbWFrZTsKICAgIG1ha2UgaW5zdGFsbAp9CmVkX25naW54X2Ns\
ZWFuX3VwICgpIAp7IAogICAgY2QgLzsKICAgIHJtIC1yZiAvZXRjL25naW54LyAvdXNyL3N\
yYy9idWlsZC87CiAgICBlZF9hcHRfcHVyZ2UgZ2NjIGxpYmM2LWRldiBtYWtlIGxpYnBjcm\
UzLWRldiBnaXQgbGlic3NsLWRldgp9CmVkX25naW54X2NyZWF0ZV9nZW5lcmF0b3IgKCkgC\
nsgCiAgICB7IAogICAgICAgIGVjaG8gIiMhL2Jpbi9iYXNoIjsKICAgICAgICBlY2hvICIv\
Ym9ja2VyLnNoIGVkX25naW54X2dlbmVyYXRlX2NvbmZpZyIKICAgIH0gPiAvZXRjL3Muc3V\
wZXJ2aXNvci9uZ2lueC5zaAp9CmVkX25naW54X2VudgplZF9uZ2lueF9pbnN0YWxsX3BhY2\
thZ2VzCmVkX25naW54X2Rvd25sb2FkX3NvdXJjZQplZF9uZ2lueF9idWlsZAplZF9uZ2lue\
F9jbGVhbl91cAplZF9uZ2lueF9jcmVhdGVfZ2VuZXJhdG9yCg==\
  | base64 -d | bash

# Bocker method => ed_ckan24_pre_install
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_ckan24_pre_install () 
# | { 
# |     mkdir -pv $CKAN_HOME/src/ $CKAN_CONFIG $CKAN_DATA /etc/apache2/sites-available/
# | }
# | ed_ckan24_pre_install
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfY2thbjI0X3ByZV9pbnN0YWxsICgpIAp7IAogICAgbWtkaXIgLXB2ICRDS0\
FOX0hPTUUvc3JjLyAkQ0tBTl9DT05GSUcgJENLQU5fREFUQSAvZXRjL2FwYWNoZTIvc2l0Z\
XMtYXZhaWxhYmxlLwp9CmVkX2NrYW4yNF9wcmVfaW5zdGFsbAo=\
  | base64 -d | bash

COPY . /usr/lib/ckan/default/src/ckan/

COPY ./contrib/docker/apache.wsgi /etc/ckan/default/apache.wsgi

COPY ./contrib/docker/my_init.d/ /etc/s.supervisor/

# Bocker method => ed_ckan24_install
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_ckan24_install () 
# | { 
# |     ed_apt_install python-minimal python-dev python-virtualenv libevent-dev libpq-dev apache2 libapache2-mod-wsgi build-essential git;
# |     virtualenv $CKAN_HOME;
# |     $CKAN_HOME/bin/pip install -r $CKAN_HOME/src/ckan/requirements.txt;
# |     $CKAN_HOME/bin/pip install -e $CKAN_HOME/src/ckan/;
# |     ln -s $CKAN_HOME/src/ckan/ckan/config/who.ini $CKAN_CONFIG/who.ini;
# |     $CKAN_HOME/bin/pip install -e git+https://github.com/ckan/ckanext-harvest.git#egg=ckanext-harvest;
# |     $CKAN_HOME/bin/pip install -r /usr/lib/ckan/default/src/ckanext-harvest/pip-requirements.txt;
# |     echo "Listen 8080" > /etc/apache2/ports.conf;
# |     ed_apt_purge build-essential git;
# |     ed_supervisor_generator "ed_ckan24_configure"
# | }
# | ed_ckan24_install
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfY2thbjI0X2luc3RhbGwgKCkgCnsgCiAgICBlZF9hcHRfaW5zdGFsbCBweX\
Rob24tbWluaW1hbCBweXRob24tZGV2IHB5dGhvbi12aXJ0dWFsZW52IGxpYmV2ZW50LWRld\
iBsaWJwcS1kZXYgYXBhY2hlMiBsaWJhcGFjaGUyLW1vZC13c2dpIGJ1aWxkLWVzc2VudGlh\
bCBnaXQ7CiAgICB2aXJ0dWFsZW52ICRDS0FOX0hPTUU7CiAgICAkQ0tBTl9IT01FL2Jpbi9\
waXAgaW5zdGFsbCAtciAkQ0tBTl9IT01FL3NyYy9ja2FuL3JlcXVpcmVtZW50cy50eHQ7Ci\
AgICAkQ0tBTl9IT01FL2Jpbi9waXAgaW5zdGFsbCAtZSAkQ0tBTl9IT01FL3NyYy9ja2FuL\
zsKICAgIGxuIC1zICRDS0FOX0hPTUUvc3JjL2NrYW4vY2thbi9jb25maWcvd2hvLmluaSAk\
Q0tBTl9DT05GSUcvd2hvLmluaTsKICAgICRDS0FOX0hPTUUvYmluL3BpcCBpbnN0YWxsIC1\
lIGdpdCtodHRwczovL2dpdGh1Yi5jb20vY2thbi9ja2FuZXh0LWhhcnZlc3QuZ2l0I2VnZz\
1ja2FuZXh0LWhhcnZlc3Q7CiAgICAkQ0tBTl9IT01FL2Jpbi9waXAgaW5zdGFsbCAtciAvd\
XNyL2xpYi9ja2FuL2RlZmF1bHQvc3JjL2NrYW5leHQtaGFydmVzdC9waXAtcmVxdWlyZW1l\
bnRzLnR4dDsKICAgIGVjaG8gIkxpc3RlbiA4MDgwIiA+IC9ldGMvYXBhY2hlMi9wb3J0cy5\
jb25mOwogICAgZWRfYXB0X3B1cmdlIGJ1aWxkLWVzc2VudGlhbCBnaXQ7CiAgICBlZF9zdX\
BlcnZpc29yX2dlbmVyYXRvciAiZWRfY2thbjI0X2NvbmZpZ3VyZSIKfQplZF9ja2FuMjRfa\
W5zdGFsbAo=\
  | base64 -d | bash

# Bocker method => __ed_ship
# * The output is /bocker.sh in the result image.
# * List of methods:
#   - ed_ckan24_configure
#   - ed_ckan24_configure_apache
#   - ed_ckan24_configure_nginx
#   - ed_ckan24_daemonize
#   - ed_cron_daemonize
#   - ed_cron_generate_config
#   - ed_exim4_config_update
#   - ed_exim4_daemonize
#   - ed_exim4_generate_config
#   - ed_exim4_uid_gid_update
#   - ed_msyslog_damonize
#   - ed_msyslog_generate_config
#   - ed_nginx_daemonize
#   - ed_nginx_generate_config
#   - ed_supervisor_config_template
#   - ed_supervisor_daemonize
#   - ed_supervisor_execute_generators
#   - ed_supervisor_fix_uid_gid
#   - ed_supervisor_generate_base_config
#   - ed_supervisor_reset_all_environments
#
# | set -eux
# | if [[ -f /bocker.sh ]]; then source /bocker.sh; fi
# | ed_ckan24_configure () 
# | { 
# |     chown www-data:www-data $CKAN_DATA;
# |     ed_ckan24_configure_nginx;
# |     ed_ckan24_configure_apache;
# |     ed_supervisor_config_template --name "apache" --command "/bocker.sh ed_ckan24_daemonize" --dir "/" --user "root"
# | }
# | ed_ckan24_configure_apache () 
# | { 
# |     rm -fv /etc/apache2/sites-enabled/*;
# |     cat > /etc/apache2/sites-enabled/ckan_default.conf  <<EOF
# |   <VirtualHost 0.0.0.0:8080>
# |     ServerName ckan
# |     ServerAlias *
# | 
# |     <Directory "${CKAN_CONFIG}">
# |       Require all granted
# |     </Directory>
# | 
# |     WSGIScriptAlias / ${CKAN_CONFIG}/apache.wsgi
# |     WSGIPassAuthorization On
# | 
# |     ErrorLog  /var/log/apache2/ckan.error.log
# |     CustomLog /var/log/apache2/ckan.acces.log combined
# |   </VirtualHost>
# | EOF
# | 
# | }
# | ed_ckan24_configure_nginx () 
# | { 
# |     rm -f /etc/nginx/sites/ping.conf;
# |     echo "tcp_nopush on;" > /etc/nginx/conf.d/11-tcp_nopush.http;
# |     echo "tcp_nodelay on;" > /etc/nginx/conf.d/11-tcp_nodelay.http;
# |     rm -rfv /var/cache/nginx/;
# |     mkdir -pv /var/cache/nginx/;
# |     chown www-data -Rc /var/cache/nginx/;
# |     cat > /etc/nginx/conf.d/12-ckan.http  <<-EOF
# |   # Unless these are set explicitly, the types_hash_bucket_size is set at
# |   # runtime depending on the processor's cache line size, which can (and does)
# |   # cause inconsistent behaviour on different hardware. Our
# |   # /etc/nginx/mime.types requires at least a 32 bit bucket, but we set these to
# |   # the latest nginx default values to be on the safe size.
# |   types_hash_bucket_size 64;
# |   types_hash_max_size 1024;
# | 
# |   proxy_cache_path  /var/cache/nginx/proxycache levels=1:2 keys_zone=cache:30m max_size=250m;
# |   proxy_temp_path   /var/cache/nginx/proxytemp  1 2;
# | EOF
# | 
# |     cat > /etc/nginx/sites/ckan.conf  <<'EOF'
# |   server {
# |     listen 80   default_server;
# |     server_name _;
# | 
# |     client_max_body_size 100M;
# | 
# |     location / {
# |       proxy_pass                          http://127.0.0.1:8080/;
# | 
# |       proxy_set_header X-Real-IP          $remote_addr;
# |       proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
# |       proxy_set_header X-Forwarded-Proto  $scheme;
# |       proxy_set_header X-Forwarded-Server $host;
# |       proxy_set_header X-Forwarded-Host   $host;
# |       proxy_set_header Host               $host;
# | 
# |       proxy_cache                         cache;
# |       proxy_cache_bypass                  $cookie_auth_tkt;
# |       proxy_no_cache                      $cookie_auth_tkt;
# |       proxy_cache_valid                   30m;
# |       proxy_cache_key                     $host$scheme$proxy_host$request_uri;
# |     }
# |   }
# | EOF
# | 
# | }
# | ed_ckan24_daemonize () 
# | { 
# |     source /etc/apache2/envvars;
# |     exec /usr/sbin/apache2 -D FOREGROUND
# | }
# | ed_cron_daemonize () 
# | { 
# |     exec /usr/sbin/cron -f -L ${CRON_LOGLEVEL:-1}
# | }
# | ed_cron_generate_config () 
# | { 
# |     if [[ "${CRON_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/cron.s || true;
# |         return 0;
# |     fi;
# |     if [[ ! -f /etc/default/locale ]]; then
# |         echo 'LANG="en_US.UTF-8"' > /etc/default/locale;
# |     fi;
# |     ed_supervisor_config_template --name "cron" --command "/bocker.sh ed_cron_daemonize" --dir "/" --user "root" --env "CRON_LOGLEVEL=${CRON_LOGLEVEL:-1}"
# | }
# | ed_exim4_config_update () 
# | { 
# |     local _other_names;
# |     if [[ "${EXIM4_MINE_CONFIG:-0}" != 0 ]]; then
# |         /usr/sbin/update-exim4.conf;
# |         return;
# |     fi;
# |     if [[ -z "${EXIM4_MAILNAME:-}" ]]; then
# |         EXIM4_MAILNAME="$(hostname -f)";
# |     fi;
# |     echo "$EXIM4_MAILNAME" > /etc/mailname;
# |     local _other_names="$EXIM4_MAILNAME";
# |     for _name in ${EXIM4_OTHER_NAMES:-};
# |     do
# |         _other_names="$_other_names ; $_name";
# |     done;
# |     cat > /etc/exim4/update-exim4.conf.conf  <<EOF
# | # This file is generated by Docker generator.
# | # Please do not edit this file.
# | dc_eximconfig_configtype='internet'
# | dc_other_hostnames='$_other_names'
# | dc_local_interfaces='127.0.0.1 ; ::1'
# | dc_readhost=''
# | dc_relay_domains=''
# | dc_minimaldns='false'
# | dc_relay_nets=''
# | dc_smarthost=''
# | CFILEMODE='644'
# | dc_use_split_config='true'
# | dc_hide_mailname=''
# | dc_mailname_in_oh='true'
# | dc_localdelivery='mail_spool'
# | EOF
# | 
# |     /usr/sbin/update-exim4.conf
# | }
# | ed_exim4_daemonize () 
# | { 
# |     exec /usr/sbin/exim4 -v -bdf -q30m
# | }
# | ed_exim4_generate_config () 
# | { 
# |     if [[ "${EXIM4_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/exim4.s || true;
# |         return 0;
# |     fi;
# |     ed_exim4_uid_gid_update;
# |     ed_exim4_config_update;
# |     ed_supervisor_config_template --name "exim4" --command "/bocker.sh ed_exim4_daemonize" --dir "/" --user "Debian-exim"
# | }
# | ed_exim4_uid_gid_update () 
# | { 
# |     EXIM4_UID="${EXIM4_UID:-10004}";
# |     EXIM4_GID="${EXIM4_GID:-10004}";
# |     groupmod -g "$EXIM4_GID" Debian-exim;
# |     usermod -g "$EXIM4_GID" -u "$EXIM4_UID" Debian-exim;
# |     mkdir -pv /var/log/exim4 /var/spool/exim4/;
# |     chmod 750 /var/spool/exim4/;
# |     chmod 755 /var/log/exim4/;
# |     touch /var/log/exim4/mainlog;
# |     chmod 644 /var/log/exim4/mainlog;
# |     chown Debian-exim:Debian-exim -Rc /var/spool/exim4/;
# |     chown Debian-exim:Debian-exim -Rc /var/log/exim4/;
# |     chown root:Debian-exim /etc/exim4/passwd.client;
# |     ln -vs /var/mail/mail /var/mail/root || :
# | }
# | ed_msyslog_damonize () 
# | { 
# |     exec python2 /usr/bin/syslog-stdout.py
# | }
# | ed_msyslog_generate_config () 
# | { 
# |     if [[ "${MSYSLOG_ENABLE:-0}" == "0" ]]; then
# |         rm -f /etc/s.supervisor/msyslog.s || true;
# |         return 0;
# |     fi;
# |     cat > /etc/s.supervisor/msyslog.s  <<-EOF
# | ; [eventlistener:stdout]
# | ; command = supervisor_stdout
# | ; buffer_size = 100
# | ; events = PROCESS_LOG
# | ; result_handler = supervisor_stdout:event_handler
# | ; priority = 1
# | ; stdout_logfile=/dev/null
# | ; stderr_logfile=/dev/null
# | 
# | [program:msyslog]
# | command=/bocker.sh ed_msyslog_damonize
# | ; stdout_events_enabled = true
# | ; stderr_events_enabled = true
# | priority = 10
# | stdout_logfile=fluent:fluentd.stdout:x:0:/supervisor/${HOSTNAME}_msyslog.stdout.log
# | stderr_logfile=fluent:fluentd.stderr:x:0:/supervisor/${HOSTNAME}_msyslog.stderr.log
# | EOF
# | 
# | }
# | ed_nginx_daemonize () 
# | { 
# |     /usr/sbin/nginx -t -c /etc/nginx/nginx.conf || exit 1;
# |     exec /usr/sbin/nginx -c /etc/nginx/nginx.conf
# | }
# | ed_nginx_generate_config () 
# | { 
# |     chown -R www-data:www-data /var/lib/nginx;
# |     ed_supervisor_config_template --name "nginx" --command "/bocker.sh ed_nginx_daemonize" --dir "/" --user "root"
# | }
# | ed_supervisor_config_template () 
# | { 
# |     local _name=;
# |     local _command=;
# |     local _stop_signal="TERM";
# |     local _workdir="/tmp/";
# |     local _user="nobody";
# |     local _env="";
# |     local _logname=;
# |     while (( $# )); do
# |         case "$1" in 
# |             "-n" | "--name")
# |                 shift;
# |                 _name="$1"
# |             ;;
# |             "-c" | "--command")
# |                 shift;
# |                 _command="$1"
# |             ;;
# |             "-s" | "--signal")
# |                 shift;
# |                 _stop_signal="$1"
# |             ;;
# |             "-d" | "--dir")
# |                 shift;
# |                 _workdir="$1"
# |             ;;
# |             "-u" | "--user")
# |                 shift;
# |                 _user="$1"
# |             ;;
# |             "-e" | "--env")
# |                 shift;
# |                 _env="$1,$_env"
# |             ;;
# |             "-l" | "--log")
# |                 shift;
# |                 _logname="$1"
# |             ;;
# |         esac;
# |         shift;
# |     done;
# |     if [[ -z "$_name" || -z "$_command" ]]; then
# |         echo ":: $FUNCNAME: Missing name/command." 1>&2;
# |         return 1;
# |     fi;
# |     _logname="${_logname:-${HOSTNAME}_${_name}}";
# |     cat > "/etc/s.supervisor/$_name.s"  <<EOF
# | [program:$_name]
# | command=$_command
# | process_name=%(program_name)s
# | numprocs=1
# | directory=$_workdir
# | umask=022
# | priority=999
# | autostart=true
# | autorestart=true
# | startsecs=1
# | startretries=3
# | exitcodes=0,2
# | stopsignal=$_stop_signal
# | stopwaitsecs=10
# | user=$_user
# | redirect_stderr=false
# | stdout_logfile=fluent:$_name.stdout:x:0:/supervisor/$_logname.stdout.log
# | stderr_logfile=fluent:$_name.stderr:x:0:/supervisor/$_logname.stderr.log
# | environment=${_env%,*}
# | serverurl=AUTO
# | EOF
# | 
# | }
# | ed_supervisor_daemonize () 
# | { 
# |     ed_supervisor_generate_base_config;
# |     ed_supervisor_fix_uid_gid;
# |     ed_supervisor_execute_generators;
# |     ed_cron_generate_config;
# |     ed_exim4_generate_config;
# |     ed_msyslog_generate_config;
# |     ed_supervisor_reset_all_environments;
# |     exec /usr/bin/supervisord --configuration /etc/supervisord.conf
# | }
# | ed_supervisor_execute_generators () 
# | { 
# |     while read FILE; do
# |         bash -n "$FILE" && { 
# |             echo ":: $FUNCNAME => $FILE..." 1>&2;
# |             bash "$FILE"
# |         } || true;
# |     done < <(find /etc/s.supervisor/ -type f -iname "*.sh" | sort)
# | }
# | ed_supervisor_fix_uid_gid () 
# | { 
# |     env | grep -E '^[A-Z0-9]+_UID=[0-9]+$' | awk -F '_UID=' '{
# |       name = tolower($1);
# |       if (name == "exim4") { name = "Debian-exim" ;}
# |       if (name == "www") { name = "www-data" ;}
# |       id = $2;
# |       if (id == 0) { id = 6000; }
# |       printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
# |       printf("usermod -u %s -g %s %s || useradd -s /bin/true -u %s -g %s %s\n", id, id, name, id, id, name);
# |     }' | bash -x;
# |     env | grep -E '^[A-Z0-9]+_GID=[0-9]+$' | awk -F '_GID=' '{
# |       name = tolower($1);
# |       if (name == "exim4") { name = "Debian-exim" ;}
# |       if (name == "www") { name = "www-data" ;}
# |       id = $2;
# |       if (id == 0) { id = 6000; }
# |       printf("groupmod -g %s %s || groupadd -g %s %s\n", id, name, id, name);
# |     }' | bash -x
# | }
# | ed_supervisor_generate_base_config () 
# | { 
# |     cat > /etc/supervisord.conf  <<EOF
# | ;
# | ; supervisord main config file - v0.1
# | ; Do not edit this file
# | ;
# | 
# | [unix_http_server]
# | file=/var/run/supervisor.sock   ; (the path to the socket file)
# | chmod=0700                      ; sockef file mode (default 0700)
# | 
# | [supervisord]
# | nodaemon=true
# | logfile=fluent:${SUPERVISOR_FLUENT_TAG_HOST_PORT:-docker:parent:24224}:/supervisor/${HOSTNAME}_main.log
# | pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
# | childlogdir=/supervisor/         ; ('AUTO' child log dir, default $TEMP)
# | logfile_maxbytes=50MB            ; (max main logfile bytes b4 rotation;default 50MB)
# | logfile_backups=10               ; (num of main logfile rotation backups;default 10)
# | loglevel=${SUPERVISOR_LOG_LEVEL:-info}             ; (log level;default info; others: debug,warn,trace)
# | 
# | ; the below section must remain in the config file for RPC
# | ; (supervisorctl/web interface) to work, additional interfaces may be
# | ; added by defining them in separate rpcinterface: sections
# | [rpcinterface:supervisor]
# | supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface
# | 
# | [supervisorctl]
# | serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket
# | 
# | [include]
# | files = /etc/s.supervisor/*.s
# | EOF
# | 
# | }
# | ed_supervisor_reset_all_environments () 
# | { 
# |     while read env; do
# |         unset $env;
# |     done < <(       env       | grep -E '^[^ ]'       | awk -F= '{print $1}'       | grep -v '^_$'       | grep -v '^PATH$'       | grep -v '^HOME$'       | grep -v '^HOSTNAME$'       | grep -v '^PWD$'       | grep -v '^LOGNAME$'       | grep -v '^SHELL$'       | grep -v '^USER$'       | grep -v '^LANG$'       | grep -v '^LC_NAME$'
# |     )
# | }
# | echo '#!/bin/bash' > /bocker.sh
# | echo '# This file is generated by Bocker.' >> /bocker.sh
# | declare -f >> /bocker.sh
# | echo 'if [[ -n "$@" ]]; then $@; fi; ' >> /bocker.sh
# | chmod 755 /bocker.sh
#
RUN echo \
c2V0IC1ldXgKaWYgW1sgLWYgL2JvY2tlci5zaCBdXTsgdGhlbiBzb3VyY2UgL2JvY2tlci5\
zaDsgZmkKZWRfY2thbjI0X2NvbmZpZ3VyZSAoKSAKeyAKICAgIGNob3duIHd3dy1kYXRhOn\
d3dy1kYXRhICRDS0FOX0RBVEE7CiAgICBlZF9ja2FuMjRfY29uZmlndXJlX25naW54OwogI\
CAgZWRfY2thbjI0X2NvbmZpZ3VyZV9hcGFjaGU7CiAgICBlZF9zdXBlcnZpc29yX2NvbmZp\
Z190ZW1wbGF0ZSAtLW5hbWUgImFwYWNoZSIgLS1jb21tYW5kICIvYm9ja2VyLnNoIGVkX2N\
rYW4yNF9kYWVtb25pemUiIC0tZGlyICIvIiAtLXVzZXIgInJvb3QiCn0KZWRfY2thbjI0X2\
NvbmZpZ3VyZV9hcGFjaGUgKCkgCnsgCiAgICBybSAtZnYgL2V0Yy9hcGFjaGUyL3NpdGVzL\
WVuYWJsZWQvKjsKICAgIGNhdCA+IC9ldGMvYXBhY2hlMi9zaXRlcy1lbmFibGVkL2NrYW5f\
ZGVmYXVsdC5jb25mICA8PEVPRgogIDxWaXJ0dWFsSG9zdCAwLjAuMC4wOjgwODA+CiAgICB\
TZXJ2ZXJOYW1lIGNrYW4KICAgIFNlcnZlckFsaWFzICoKCiAgICA8RGlyZWN0b3J5ICIke0\
NLQU5fQ09ORklHfSI+CiAgICAgIFJlcXVpcmUgYWxsIGdyYW50ZWQKICAgIDwvRGlyZWN0b\
3J5PgoKICAgIFdTR0lTY3JpcHRBbGlhcyAvICR7Q0tBTl9DT05GSUd9L2FwYWNoZS53c2dp\
CiAgICBXU0dJUGFzc0F1dGhvcml6YXRpb24gT24KCiAgICBFcnJvckxvZyAgL3Zhci9sb2c\
vYXBhY2hlMi9ja2FuLmVycm9yLmxvZwogICAgQ3VzdG9tTG9nIC92YXIvbG9nL2FwYWNoZT\
IvY2thbi5hY2Nlcy5sb2cgY29tYmluZWQKICA8L1ZpcnR1YWxIb3N0PgpFT0YKCn0KZWRfY\
2thbjI0X2NvbmZpZ3VyZV9uZ2lueCAoKSAKeyAKICAgIHJtIC1mIC9ldGMvbmdpbngvc2l0\
ZXMvcGluZy5jb25mOwogICAgZWNobyAidGNwX25vcHVzaCBvbjsiID4gL2V0Yy9uZ2lueC9\
jb25mLmQvMTEtdGNwX25vcHVzaC5odHRwOwogICAgZWNobyAidGNwX25vZGVsYXkgb247Ii\
A+IC9ldGMvbmdpbngvY29uZi5kLzExLXRjcF9ub2RlbGF5Lmh0dHA7CiAgICBybSAtcmZ2I\
C92YXIvY2FjaGUvbmdpbngvOwogICAgbWtkaXIgLXB2IC92YXIvY2FjaGUvbmdpbngvOwog\
ICAgY2hvd24gd3d3LWRhdGEgLVJjIC92YXIvY2FjaGUvbmdpbngvOwogICAgY2F0ID4gL2V\
0Yy9uZ2lueC9jb25mLmQvMTItY2thbi5odHRwICA8PC1FT0YKICAjIFVubGVzcyB0aGVzZS\
BhcmUgc2V0IGV4cGxpY2l0bHksIHRoZSB0eXBlc19oYXNoX2J1Y2tldF9zaXplIGlzIHNld\
CBhdAogICMgcnVudGltZSBkZXBlbmRpbmcgb24gdGhlIHByb2Nlc3NvcidzIGNhY2hlIGxp\
bmUgc2l6ZSwgd2hpY2ggY2FuIChhbmQgZG9lcykKICAjIGNhdXNlIGluY29uc2lzdGVudCB\
iZWhhdmlvdXIgb24gZGlmZmVyZW50IGhhcmR3YXJlLiBPdXIKICAjIC9ldGMvbmdpbngvbW\
ltZS50eXBlcyByZXF1aXJlcyBhdCBsZWFzdCBhIDMyIGJpdCBidWNrZXQsIGJ1dCB3ZSBzZ\
XQgdGhlc2UgdG8KICAjIHRoZSBsYXRlc3QgbmdpbnggZGVmYXVsdCB2YWx1ZXMgdG8gYmUg\
b24gdGhlIHNhZmUgc2l6ZS4KICB0eXBlc19oYXNoX2J1Y2tldF9zaXplIDY0OwogIHR5cGV\
zX2hhc2hfbWF4X3NpemUgMTAyNDsKCiAgcHJveHlfY2FjaGVfcGF0aCAgL3Zhci9jYWNoZS\
9uZ2lueC9wcm94eWNhY2hlIGxldmVscz0xOjIga2V5c196b25lPWNhY2hlOjMwbSBtYXhfc\
2l6ZT0yNTBtOwogIHByb3h5X3RlbXBfcGF0aCAgIC92YXIvY2FjaGUvbmdpbngvcHJveHl0\
ZW1wICAxIDI7CkVPRgoKICAgIGNhdCA+IC9ldGMvbmdpbngvc2l0ZXMvY2thbi5jb25mICA\
8PCdFT0YnCiAgc2VydmVyIHsKICAgIGxpc3RlbiA4MCAgIGRlZmF1bHRfc2VydmVyOwogIC\
Agc2VydmVyX25hbWUgXzsKCiAgICBjbGllbnRfbWF4X2JvZHlfc2l6ZSAxMDBNOwoKICAgI\
GxvY2F0aW9uIC8gewogICAgICBwcm94eV9wYXNzICAgICAgICAgICAgICAgICAgICAgICAg\
ICBodHRwOi8vMTI3LjAuMC4xOjgwODAvOwoKICAgICAgcHJveHlfc2V0X2hlYWRlciBYLVJ\
lYWwtSVAgICAgICAgICAgJHJlbW90ZV9hZGRyOwogICAgICBwcm94eV9zZXRfaGVhZGVyIF\
gtRm9yd2FyZGVkLUZvciAgICAkcHJveHlfYWRkX3hfZm9yd2FyZGVkX2ZvcjsKICAgICAgc\
HJveHlfc2V0X2hlYWRlciBYLUZvcndhcmRlZC1Qcm90byAgJHNjaGVtZTsKICAgICAgcHJv\
eHlfc2V0X2hlYWRlciBYLUZvcndhcmRlZC1TZXJ2ZXIgJGhvc3Q7CiAgICAgIHByb3h5X3N\
ldF9oZWFkZXIgWC1Gb3J3YXJkZWQtSG9zdCAgICRob3N0OwogICAgICBwcm94eV9zZXRfaG\
VhZGVyIEhvc3QgICAgICAgICAgICAgICAkaG9zdDsKCiAgICAgIHByb3h5X2NhY2hlICAgI\
CAgICAgICAgICAgICAgICAgICAgIGNhY2hlOwogICAgICBwcm94eV9jYWNoZV9ieXBhc3Mg\
ICAgICAgICAgICAgICAgICAkY29va2llX2F1dGhfdGt0OwogICAgICBwcm94eV9ub19jYWN\
oZSAgICAgICAgICAgICAgICAgICAgICAkY29va2llX2F1dGhfdGt0OwogICAgICBwcm94eV\
9jYWNoZV92YWxpZCAgICAgICAgICAgICAgICAgICAzMG07CiAgICAgIHByb3h5X2NhY2hlX\
2tleSAgICAgICAgICAgICAgICAgICAgICRob3N0JHNjaGVtZSRwcm94eV9ob3N0JHJlcXVl\
c3RfdXJpOwogICAgfQogIH0KRU9GCgp9CmVkX2NrYW4yNF9kYWVtb25pemUgKCkgCnsgCiA\
gICBzb3VyY2UgL2V0Yy9hcGFjaGUyL2VudnZhcnM7CiAgICBleGVjIC91c3Ivc2Jpbi9hcG\
FjaGUyIC1EIEZPUkVHUk9VTkQKfQplZF9jcm9uX2RhZW1vbml6ZSAoKSAKeyAKICAgIGV4Z\
WMgL3Vzci9zYmluL2Nyb24gLWYgLUwgJHtDUk9OX0xPR0xFVkVMOi0xfQp9CmVkX2Nyb25f\
Z2VuZXJhdGVfY29uZmlnICgpIAp7IAogICAgaWYgW1sgIiR7Q1JPTl9FTkFCTEU6LTB9IiA\
9PSAiMCIgXV07IHRoZW4KICAgICAgICBybSAtZiAvZXRjL3Muc3VwZXJ2aXNvci9jcm9uLn\
MgfHwgdHJ1ZTsKICAgICAgICByZXR1cm4gMDsKICAgIGZpOwogICAgaWYgW1sgISAtZiAvZ\
XRjL2RlZmF1bHQvbG9jYWxlIF1dOyB0aGVuCiAgICAgICAgZWNobyAnTEFORz0iZW5fVVMu\
VVRGLTgiJyA+IC9ldGMvZGVmYXVsdC9sb2NhbGU7CiAgICBmaTsKICAgIGVkX3N1cGVydml\
zb3JfY29uZmlnX3RlbXBsYXRlIC0tbmFtZSAiY3JvbiIgLS1jb21tYW5kICIvYm9ja2VyLn\
NoIGVkX2Nyb25fZGFlbW9uaXplIiAtLWRpciAiLyIgLS11c2VyICJyb290IiAtLWVudiAiQ\
1JPTl9MT0dMRVZFTD0ke0NST05fTE9HTEVWRUw6LTF9Igp9CmVkX2V4aW00X2NvbmZpZ191\
cGRhdGUgKCkgCnsgCiAgICBsb2NhbCBfb3RoZXJfbmFtZXM7CiAgICBpZiBbWyAiJHtFWEl\
NNF9NSU5FX0NPTkZJRzotMH0iICE9IDAgXV07IHRoZW4KICAgICAgICAvdXNyL3NiaW4vdX\
BkYXRlLWV4aW00LmNvbmY7CiAgICAgICAgcmV0dXJuOwogICAgZmk7CiAgICBpZiBbWyAte\
iAiJHtFWElNNF9NQUlMTkFNRTotfSIgXV07IHRoZW4KICAgICAgICBFWElNNF9NQUlMTkFN\
RT0iJChob3N0bmFtZSAtZikiOwogICAgZmk7CiAgICBlY2hvICIkRVhJTTRfTUFJTE5BTUU\
iID4gL2V0Yy9tYWlsbmFtZTsKICAgIGxvY2FsIF9vdGhlcl9uYW1lcz0iJEVYSU00X01BSU\
xOQU1FIjsKICAgIGZvciBfbmFtZSBpbiAke0VYSU00X09USEVSX05BTUVTOi19OwogICAgZ\
G8KICAgICAgICBfb3RoZXJfbmFtZXM9IiRfb3RoZXJfbmFtZXMgOyAkX25hbWUiOwogICAg\
ZG9uZTsKICAgIGNhdCA+IC9ldGMvZXhpbTQvdXBkYXRlLWV4aW00LmNvbmYuY29uZiAgPDx\
FT0YKIyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IERvY2tlciBnZW5lcmF0b3IuCiMgUG\
xlYXNlIGRvIG5vdCBlZGl0IHRoaXMgZmlsZS4KZGNfZXhpbWNvbmZpZ19jb25maWd0eXBlP\
SdpbnRlcm5ldCcKZGNfb3RoZXJfaG9zdG5hbWVzPSckX290aGVyX25hbWVzJwpkY19sb2Nh\
bF9pbnRlcmZhY2VzPScxMjcuMC4wLjEgOyA6OjEnCmRjX3JlYWRob3N0PScnCmRjX3JlbGF\
5X2RvbWFpbnM9JycKZGNfbWluaW1hbGRucz0nZmFsc2UnCmRjX3JlbGF5X25ldHM9JycKZG\
Nfc21hcnRob3N0PScnCkNGSUxFTU9ERT0nNjQ0JwpkY191c2Vfc3BsaXRfY29uZmlnPSd0c\
nVlJwpkY19oaWRlX21haWxuYW1lPScnCmRjX21haWxuYW1lX2luX29oPSd0cnVlJwpkY19s\
b2NhbGRlbGl2ZXJ5PSdtYWlsX3Nwb29sJwpFT0YKCiAgICAvdXNyL3NiaW4vdXBkYXRlLWV\
4aW00LmNvbmYKfQplZF9leGltNF9kYWVtb25pemUgKCkgCnsgCiAgICBleGVjIC91c3Ivc2\
Jpbi9leGltNCAtdiAtYmRmIC1xMzBtCn0KZWRfZXhpbTRfZ2VuZXJhdGVfY29uZmlnICgpI\
Ap7IAogICAgaWYgW1sgIiR7RVhJTTRfRU5BQkxFOi0wfSIgPT0gIjAiIF1dOyB0aGVuCiAg\
ICAgICAgcm0gLWYgL2V0Yy9zLnN1cGVydmlzb3IvZXhpbTQucyB8fCB0cnVlOwogICAgICA\
gIHJldHVybiAwOwogICAgZmk7CiAgICBlZF9leGltNF91aWRfZ2lkX3VwZGF0ZTsKICAgIG\
VkX2V4aW00X2NvbmZpZ191cGRhdGU7CiAgICBlZF9zdXBlcnZpc29yX2NvbmZpZ190ZW1wb\
GF0ZSAtLW5hbWUgImV4aW00IiAtLWNvbW1hbmQgIi9ib2NrZXIuc2ggZWRfZXhpbTRfZGFl\
bW9uaXplIiAtLWRpciAiLyIgLS11c2VyICJEZWJpYW4tZXhpbSIKfQplZF9leGltNF91aWR\
fZ2lkX3VwZGF0ZSAoKSAKeyAKICAgIEVYSU00X1VJRD0iJHtFWElNNF9VSUQ6LTEwMDA0fS\
I7CiAgICBFWElNNF9HSUQ9IiR7RVhJTTRfR0lEOi0xMDAwNH0iOwogICAgZ3JvdXBtb2QgL\
WcgIiRFWElNNF9HSUQiIERlYmlhbi1leGltOwogICAgdXNlcm1vZCAtZyAiJEVYSU00X0dJ\
RCIgLXUgIiRFWElNNF9VSUQiIERlYmlhbi1leGltOwogICAgbWtkaXIgLXB2IC92YXIvbG9\
nL2V4aW00IC92YXIvc3Bvb2wvZXhpbTQvOwogICAgY2htb2QgNzUwIC92YXIvc3Bvb2wvZX\
hpbTQvOwogICAgY2htb2QgNzU1IC92YXIvbG9nL2V4aW00LzsKICAgIHRvdWNoIC92YXIvb\
G9nL2V4aW00L21haW5sb2c7CiAgICBjaG1vZCA2NDQgL3Zhci9sb2cvZXhpbTQvbWFpbmxv\
ZzsKICAgIGNob3duIERlYmlhbi1leGltOkRlYmlhbi1leGltIC1SYyAvdmFyL3Nwb29sL2V\
4aW00LzsKICAgIGNob3duIERlYmlhbi1leGltOkRlYmlhbi1leGltIC1SYyAvdmFyL2xvZy\
9leGltNC87CiAgICBjaG93biByb290OkRlYmlhbi1leGltIC9ldGMvZXhpbTQvcGFzc3dkL\
mNsaWVudDsKICAgIGxuIC12cyAvdmFyL21haWwvbWFpbCAvdmFyL21haWwvcm9vdCB8fCA6\
Cn0KZWRfbXN5c2xvZ19kYW1vbml6ZSAoKSAKeyAKICAgIGV4ZWMgcHl0aG9uMiAvdXNyL2J\
pbi9zeXNsb2ctc3Rkb3V0LnB5Cn0KZWRfbXN5c2xvZ19nZW5lcmF0ZV9jb25maWcgKCkgCn\
sgCiAgICBpZiBbWyAiJHtNU1lTTE9HX0VOQUJMRTotMH0iID09ICIwIiBdXTsgdGhlbgogI\
CAgICAgIHJtIC1mIC9ldGMvcy5zdXBlcnZpc29yL21zeXNsb2cucyB8fCB0cnVlOwogICAg\
ICAgIHJldHVybiAwOwogICAgZmk7CiAgICBjYXQgPiAvZXRjL3Muc3VwZXJ2aXNvci9tc3l\
zbG9nLnMgIDw8LUVPRgo7IFtldmVudGxpc3RlbmVyOnN0ZG91dF0KOyBjb21tYW5kID0gc3\
VwZXJ2aXNvcl9zdGRvdXQKOyBidWZmZXJfc2l6ZSA9IDEwMAo7IGV2ZW50cyA9IFBST0NFU\
1NfTE9HCjsgcmVzdWx0X2hhbmRsZXIgPSBzdXBlcnZpc29yX3N0ZG91dDpldmVudF9oYW5k\
bGVyCjsgcHJpb3JpdHkgPSAxCjsgc3Rkb3V0X2xvZ2ZpbGU9L2Rldi9udWxsCjsgc3RkZXJ\
yX2xvZ2ZpbGU9L2Rldi9udWxsCgpbcHJvZ3JhbTptc3lzbG9nXQpjb21tYW5kPS9ib2NrZX\
Iuc2ggZWRfbXN5c2xvZ19kYW1vbml6ZQo7IHN0ZG91dF9ldmVudHNfZW5hYmxlZCA9IHRyd\
WUKOyBzdGRlcnJfZXZlbnRzX2VuYWJsZWQgPSB0cnVlCnByaW9yaXR5ID0gMTAKc3Rkb3V0\
X2xvZ2ZpbGU9Zmx1ZW50OmZsdWVudGQuc3Rkb3V0Ong6MDovc3VwZXJ2aXNvci8ke0hPU1R\
OQU1FfV9tc3lzbG9nLnN0ZG91dC5sb2cKc3RkZXJyX2xvZ2ZpbGU9Zmx1ZW50OmZsdWVudG\
Quc3RkZXJyOng6MDovc3VwZXJ2aXNvci8ke0hPU1ROQU1FfV9tc3lzbG9nLnN0ZGVyci5sb\
2cKRU9GCgp9CmVkX25naW54X2RhZW1vbml6ZSAoKSAKeyAKICAgIC91c3Ivc2Jpbi9uZ2lu\
eCAtdCAtYyAvZXRjL25naW54L25naW54LmNvbmYgfHwgZXhpdCAxOwogICAgZXhlYyAvdXN\
yL3NiaW4vbmdpbnggLWMgL2V0Yy9uZ2lueC9uZ2lueC5jb25mCn0KZWRfbmdpbnhfZ2VuZX\
JhdGVfY29uZmlnICgpIAp7IAogICAgY2hvd24gLVIgd3d3LWRhdGE6d3d3LWRhdGEgL3Zhc\
i9saWIvbmdpbng7CiAgICBlZF9zdXBlcnZpc29yX2NvbmZpZ190ZW1wbGF0ZSAtLW5hbWUg\
Im5naW54IiAtLWNvbW1hbmQgIi9ib2NrZXIuc2ggZWRfbmdpbnhfZGFlbW9uaXplIiAtLWR\
pciAiLyIgLS11c2VyICJyb290Igp9CmVkX3N1cGVydmlzb3JfY29uZmlnX3RlbXBsYXRlIC\
gpIAp7IAogICAgbG9jYWwgX25hbWU9OwogICAgbG9jYWwgX2NvbW1hbmQ9OwogICAgbG9jY\
WwgX3N0b3Bfc2lnbmFsPSJURVJNIjsKICAgIGxvY2FsIF93b3JrZGlyPSIvdG1wLyI7CiAg\
ICBsb2NhbCBfdXNlcj0ibm9ib2R5IjsKICAgIGxvY2FsIF9lbnY9IiI7CiAgICBsb2NhbCB\
fbG9nbmFtZT07CiAgICB3aGlsZSAoKCAkIyApKTsgZG8KICAgICAgICBjYXNlICIkMSIgaW\
4gCiAgICAgICAgICAgICItbiIgfCAiLS1uYW1lIikKICAgICAgICAgICAgICAgIHNoaWZ0O\
wogICAgICAgICAgICAgICAgX25hbWU9IiQxIgogICAgICAgICAgICA7OwogICAgICAgICAg\
ICAiLWMiIHwgIi0tY29tbWFuZCIpCiAgICAgICAgICAgICAgICBzaGlmdDsKICAgICAgICA\
gICAgICAgIF9jb21tYW5kPSIkMSIKICAgICAgICAgICAgOzsKICAgICAgICAgICAgIi1zIi\
B8ICItLXNpZ25hbCIpCiAgICAgICAgICAgICAgICBzaGlmdDsKICAgICAgICAgICAgICAgI\
F9zdG9wX3NpZ25hbD0iJDEiCiAgICAgICAgICAgIDs7CiAgICAgICAgICAgICItZCIgfCAi\
LS1kaXIiKQogICAgICAgICAgICAgICAgc2hpZnQ7CiAgICAgICAgICAgICAgICBfd29ya2R\
pcj0iJDEiCiAgICAgICAgICAgIDs7CiAgICAgICAgICAgICItdSIgfCAiLS11c2VyIikKIC\
AgICAgICAgICAgICAgIHNoaWZ0OwogICAgICAgICAgICAgICAgX3VzZXI9IiQxIgogICAgI\
CAgICAgICA7OwogICAgICAgICAgICAiLWUiIHwgIi0tZW52IikKICAgICAgICAgICAgICAg\
IHNoaWZ0OwogICAgICAgICAgICAgICAgX2Vudj0iJDEsJF9lbnYiCiAgICAgICAgICAgIDs\
7CiAgICAgICAgICAgICItbCIgfCAiLS1sb2ciKQogICAgICAgICAgICAgICAgc2hpZnQ7Ci\
AgICAgICAgICAgICAgICBfbG9nbmFtZT0iJDEiCiAgICAgICAgICAgIDs7CiAgICAgICAgZ\
XNhYzsKICAgICAgICBzaGlmdDsKICAgIGRvbmU7CiAgICBpZiBbWyAteiAiJF9uYW1lIiB8\
fCAteiAiJF9jb21tYW5kIiBdXTsgdGhlbgogICAgICAgIGVjaG8gIjo6ICRGVU5DTkFNRTo\
gTWlzc2luZyBuYW1lL2NvbW1hbmQuIiAxPiYyOwogICAgICAgIHJldHVybiAxOwogICAgZm\
k7CiAgICBfbG9nbmFtZT0iJHtfbG9nbmFtZTotJHtIT1NUTkFNRX1fJHtfbmFtZX19IjsKI\
CAgIGNhdCA+ICIvZXRjL3Muc3VwZXJ2aXNvci8kX25hbWUucyIgIDw8RU9GCltwcm9ncmFt\
OiRfbmFtZV0KY29tbWFuZD0kX2NvbW1hbmQKcHJvY2Vzc19uYW1lPSUocHJvZ3JhbV9uYW1\
lKXMKbnVtcHJvY3M9MQpkaXJlY3Rvcnk9JF93b3JrZGlyCnVtYXNrPTAyMgpwcmlvcml0eT\
05OTkKYXV0b3N0YXJ0PXRydWUKYXV0b3Jlc3RhcnQ9dHJ1ZQpzdGFydHNlY3M9MQpzdGFyd\
HJldHJpZXM9MwpleGl0Y29kZXM9MCwyCnN0b3BzaWduYWw9JF9zdG9wX3NpZ25hbApzdG9w\
d2FpdHNlY3M9MTAKdXNlcj0kX3VzZXIKcmVkaXJlY3Rfc3RkZXJyPWZhbHNlCnN0ZG91dF9\
sb2dmaWxlPWZsdWVudDokX25hbWUuc3Rkb3V0Ong6MDovc3VwZXJ2aXNvci8kX2xvZ25hbW\
Uuc3Rkb3V0LmxvZwpzdGRlcnJfbG9nZmlsZT1mbHVlbnQ6JF9uYW1lLnN0ZGVycjp4OjA6L\
3N1cGVydmlzb3IvJF9sb2duYW1lLnN0ZGVyci5sb2cKZW52aXJvbm1lbnQ9JHtfZW52JSwq\
fQpzZXJ2ZXJ1cmw9QVVUTwpFT0YKCn0KZWRfc3VwZXJ2aXNvcl9kYWVtb25pemUgKCkgCns\
gCiAgICBlZF9zdXBlcnZpc29yX2dlbmVyYXRlX2Jhc2VfY29uZmlnOwogICAgZWRfc3VwZX\
J2aXNvcl9maXhfdWlkX2dpZDsKICAgIGVkX3N1cGVydmlzb3JfZXhlY3V0ZV9nZW5lcmF0b\
3JzOwogICAgZWRfY3Jvbl9nZW5lcmF0ZV9jb25maWc7CiAgICBlZF9leGltNF9nZW5lcmF0\
ZV9jb25maWc7CiAgICBlZF9tc3lzbG9nX2dlbmVyYXRlX2NvbmZpZzsKICAgIGVkX3N1cGV\
ydmlzb3JfcmVzZXRfYWxsX2Vudmlyb25tZW50czsKICAgIGV4ZWMgL3Vzci9iaW4vc3VwZX\
J2aXNvcmQgLS1jb25maWd1cmF0aW9uIC9ldGMvc3VwZXJ2aXNvcmQuY29uZgp9CmVkX3N1c\
GVydmlzb3JfZXhlY3V0ZV9nZW5lcmF0b3JzICgpIAp7IAogICAgd2hpbGUgcmVhZCBGSUxF\
OyBkbwogICAgICAgIGJhc2ggLW4gIiRGSUxFIiAmJiB7IAogICAgICAgICAgICBlY2hvICI\
6OiAkRlVOQ05BTUUgPT4gJEZJTEUuLi4iIDE+JjI7CiAgICAgICAgICAgIGJhc2ggIiRGSU\
xFIgogICAgICAgIH0gfHwgdHJ1ZTsKICAgIGRvbmUgPCA8KGZpbmQgL2V0Yy9zLnN1cGVyd\
mlzb3IvIC10eXBlIGYgLWluYW1lICIqLnNoIiB8IHNvcnQpCn0KZWRfc3VwZXJ2aXNvcl9m\
aXhfdWlkX2dpZCAoKSAKeyAKICAgIGVudiB8IGdyZXAgLUUgJ15bQS1aMC05XStfVUlEPVs\
wLTldKyQnIHwgYXdrIC1GICdfVUlEPScgJ3sKICAgICAgbmFtZSA9IHRvbG93ZXIoJDEpOw\
ogICAgICBpZiAobmFtZSA9PSAiZXhpbTQiKSB7IG5hbWUgPSAiRGViaWFuLWV4aW0iIDt9C\
iAgICAgIGlmIChuYW1lID09ICJ3d3ciKSB7IG5hbWUgPSAid3d3LWRhdGEiIDt9CiAgICAg\
IGlkID0gJDI7CiAgICAgIGlmIChpZCA9PSAwKSB7IGlkID0gNjAwMDsgfQogICAgICBwcml\
udGYoImdyb3VwbW9kIC1nICVzICVzIHx8IGdyb3VwYWRkIC1nICVzICVzXG4iLCBpZCwgbm\
FtZSwgaWQsIG5hbWUpOwogICAgICBwcmludGYoInVzZXJtb2QgLXUgJXMgLWcgJXMgJXMgf\
HwgdXNlcmFkZCAtcyAvYmluL3RydWUgLXUgJXMgLWcgJXMgJXNcbiIsIGlkLCBpZCwgbmFt\
ZSwgaWQsIGlkLCBuYW1lKTsKICAgIH0nIHwgYmFzaCAteDsKICAgIGVudiB8IGdyZXAgLUU\
gJ15bQS1aMC05XStfR0lEPVswLTldKyQnIHwgYXdrIC1GICdfR0lEPScgJ3sKICAgICAgbm\
FtZSA9IHRvbG93ZXIoJDEpOwogICAgICBpZiAobmFtZSA9PSAiZXhpbTQiKSB7IG5hbWUgP\
SAiRGViaWFuLWV4aW0iIDt9CiAgICAgIGlmIChuYW1lID09ICJ3d3ciKSB7IG5hbWUgPSAi\
d3d3LWRhdGEiIDt9CiAgICAgIGlkID0gJDI7CiAgICAgIGlmIChpZCA9PSAwKSB7IGlkID0\
gNjAwMDsgfQogICAgICBwcmludGYoImdyb3VwbW9kIC1nICVzICVzIHx8IGdyb3VwYWRkIC\
1nICVzICVzXG4iLCBpZCwgbmFtZSwgaWQsIG5hbWUpOwogICAgfScgfCBiYXNoIC14Cn0KZ\
WRfc3VwZXJ2aXNvcl9nZW5lcmF0ZV9iYXNlX2NvbmZpZyAoKSAKeyAKICAgIGNhdCA+IC9l\
dGMvc3VwZXJ2aXNvcmQuY29uZiAgPDxFT0YKOwo7IHN1cGVydmlzb3JkIG1haW4gY29uZml\
nIGZpbGUgLSB2MC4xCjsgRG8gbm90IGVkaXQgdGhpcyBmaWxlCjsKClt1bml4X2h0dHBfc2\
VydmVyXQpmaWxlPS92YXIvcnVuL3N1cGVydmlzb3Iuc29jayAgIDsgKHRoZSBwYXRoIHRvI\
HRoZSBzb2NrZXQgZmlsZSkKY2htb2Q9MDcwMCAgICAgICAgICAgICAgICAgICAgICA7IHNv\
Y2tlZiBmaWxlIG1vZGUgKGRlZmF1bHQgMDcwMCkKCltzdXBlcnZpc29yZF0Kbm9kYWVtb24\
9dHJ1ZQpsb2dmaWxlPWZsdWVudDoke1NVUEVSVklTT1JfRkxVRU5UX1RBR19IT1NUX1BPUl\
Q6LWRvY2tlcjpwYXJlbnQ6MjQyMjR9Oi9zdXBlcnZpc29yLyR7SE9TVE5BTUV9X21haW4ub\
G9nCnBpZGZpbGU9L3Zhci9ydW4vc3VwZXJ2aXNvcmQucGlkIDsgKHN1cGVydmlzb3JkIHBp\
ZGZpbGU7ZGVmYXVsdCBzdXBlcnZpc29yZC5waWQpCmNoaWxkbG9nZGlyPS9zdXBlcnZpc29\
yLyAgICAgICAgIDsgKCdBVVRPJyBjaGlsZCBsb2cgZGlyLCBkZWZhdWx0ICRURU1QKQpsb2\
dmaWxlX21heGJ5dGVzPTUwTUIgICAgICAgICAgICA7IChtYXggbWFpbiBsb2dmaWxlIGJ5d\
GVzIGI0IHJvdGF0aW9uO2RlZmF1bHQgNTBNQikKbG9nZmlsZV9iYWNrdXBzPTEwICAgICAg\
ICAgICAgICAgOyAobnVtIG9mIG1haW4gbG9nZmlsZSByb3RhdGlvbiBiYWNrdXBzO2RlZmF\
1bHQgMTApCmxvZ2xldmVsPSR7U1VQRVJWSVNPUl9MT0dfTEVWRUw6LWluZm99ICAgICAgIC\
AgICAgIDsgKGxvZyBsZXZlbDtkZWZhdWx0IGluZm87IG90aGVyczogZGVidWcsd2Fybix0c\
mFjZSkKCjsgdGhlIGJlbG93IHNlY3Rpb24gbXVzdCByZW1haW4gaW4gdGhlIGNvbmZpZyBm\
aWxlIGZvciBSUEMKOyAoc3VwZXJ2aXNvcmN0bC93ZWIgaW50ZXJmYWNlKSB0byB3b3JrLCB\
hZGRpdGlvbmFsIGludGVyZmFjZXMgbWF5IGJlCjsgYWRkZWQgYnkgZGVmaW5pbmcgdGhlbS\
BpbiBzZXBhcmF0ZSBycGNpbnRlcmZhY2U6IHNlY3Rpb25zCltycGNpbnRlcmZhY2U6c3VwZ\
XJ2aXNvcl0Kc3VwZXJ2aXNvci5ycGNpbnRlcmZhY2VfZmFjdG9yeSA9IHN1cGVydmlzb3Iu\
cnBjaW50ZXJmYWNlOm1ha2VfbWFpbl9ycGNpbnRlcmZhY2UKCltzdXBlcnZpc29yY3RsXQp\
zZXJ2ZXJ1cmw9dW5peDovLy92YXIvcnVuL3N1cGVydmlzb3Iuc29jayA7IHVzZSBhIHVuaX\
g6Ly8gVVJMICBmb3IgYSB1bml4IHNvY2tldAoKW2luY2x1ZGVdCmZpbGVzID0gL2V0Yy9zL\
nN1cGVydmlzb3IvKi5zCkVPRgoKfQplZF9zdXBlcnZpc29yX3Jlc2V0X2FsbF9lbnZpcm9u\
bWVudHMgKCkgCnsgCiAgICB3aGlsZSByZWFkIGVudjsgZG8KICAgICAgICB1bnNldCAkZW5\
2OwogICAgZG9uZSA8IDwoICAgICAgIGVudiAgICAgICB8IGdyZXAgLUUgJ15bXiBdJyAgIC\
AgICB8IGF3ayAtRj0gJ3twcmludCAkMX0nICAgICAgIHwgZ3JlcCAtdiAnXl8kJyAgICAgI\
CB8IGdyZXAgLXYgJ15QQVRIJCcgICAgICAgfCBncmVwIC12ICdeSE9NRSQnICAgICAgIHwg\
Z3JlcCAtdiAnXkhPU1ROQU1FJCcgICAgICAgfCBncmVwIC12ICdeUFdEJCcgICAgICAgfCB\
ncmVwIC12ICdeTE9HTkFNRSQnICAgICAgIHwgZ3JlcCAtdiAnXlNIRUxMJCcgICAgICAgfC\
BncmVwIC12ICdeVVNFUiQnICAgICAgIHwgZ3JlcCAtdiAnXkxBTkckJyAgICAgICB8IGdyZ\
XAgLXYgJ15MQ19OQU1FJCcKICAgICkKfQplY2hvICcjIS9iaW4vYmFzaCcgPiAvYm9ja2Vy\
LnNoCmVjaG8gJyMgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBCb2NrZXIuJyA+PiAvYm9\
ja2VyLnNoCmRlY2xhcmUgLWYgPj4gL2JvY2tlci5zaAplY2hvICdpZiBbWyAtbiAiJEAiIF\
1dOyB0aGVuICRAOyBmaTsgJyA+PiAvYm9ja2VyLnNoCmNobW9kIDc1NSAvYm9ja2VyLnNoC\
g==\
  | base64 -d | bash

ENV WWW_UID 10005

COPY etc/nginx/ /etc/nginx/

VOLUME /var/lib/ckan

EXPOSE 80

CMD ["/supervisor.sh"]
